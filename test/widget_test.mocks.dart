// Mocks generated by Mockito 5.4.4 from annotations
// in magic_ai_app/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:magic_ai_app/data_models.dart' as _i5;
import 'package:magic_ai_app/database_helper.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<_i2.Database> initDB(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #initDB,
          [filePath],
        ),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.method(
            #initDB,
            [filePath],
          ),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<String> insertCategory(_i5.WorkoutCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCategory,
          [category],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #insertCategory,
            [category],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<List<_i5.WorkoutCategory>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<List<_i5.WorkoutCategory>>.value(
            <_i5.WorkoutCategory>[]),
      ) as _i4.Future<List<_i5.WorkoutCategory>>);

  @override
  _i4.Future<void> deleteCategory(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> insertExercise(_i5.Exercise? exercise) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertExercise,
          [exercise],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #insertExercise,
            [exercise],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<List<_i5.Exercise>> getExercisesByCategory(String? categoryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExercisesByCategory,
          [categoryId],
        ),
        returnValue: _i4.Future<List<_i5.Exercise>>.value(<_i5.Exercise>[]),
      ) as _i4.Future<List<_i5.Exercise>>);

  @override
  _i4.Future<void> deleteExercise(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteExercise,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
